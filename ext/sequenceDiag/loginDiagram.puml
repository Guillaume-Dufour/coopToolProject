@startuml

actor user
participant LoginController
participant UserFacade
participant AbstractDAOFactory
participant MySQLDAOFactory
participant MySQLUserDAO
participant User
participant Session
participant Exception
database CoopToolDatabase
user -> LoginController : login()
activate LoginController
create UserFacade
LoginController -> UserFacade  : new
UserFacade -> AbstractDAOFactory : getFactory(type : FactoryType)
create MySQLDAOFactory
AbstractDAOFactory -> MySQLDAOFactory : new
MySQLDAOFactory -> MySQLDAOFactory : getUserDAO()
create MySQLUserDAO
MySQLDAOFactory -> MySQLUserDAO : new
MySQLUserDAO --> MySQLDAOFactory : UserDAO
MySQLDAOFactory --> UserFacade : UserDAO
UserFacade --> LoginController : UserFacade
LoginController -> LoginController : getText()
LoginController -> UserFacade : login(mail : String, password : String)
activate UserFacade
UserFacade -> MySQLUserDAO : findUserByMail(mail : String)
activate MySQLUserDAO
MySQLUserDAO -> CoopToolDatabase : executeQuery(query : String)
CoopToolDatabase --> MySQLUserDAO : result
MySQLUserDAO -> CoopToolDatabase : close()
create User
MySQLUserDAO -> User : new
alt FoundUser
User --> MySQLUserDAO : User
MySQLUserDAO -> UserFacade : User
UserFacade -> User : checkPassword(password : String)
activate User
alt GoodPassword
User -> UserFacade : True
UserFacade -> LoginController : User
LoginController -> Session : getInstance()
activate Session
Session -> Session : setUser(User)
deactivate Session
else FalsePassword
User -> UserFacade : False
UserFacade -> Exception : throwException()
end
deactivate User
else !FoundUser
User --> MySQLUserDAO : Null
MySQLUserDAO -> UserFacade : Null
UserFacade -> Exception : throwException()
end
deactivate LoginController
deactivate UserFacade
deactivate MySQLUserDAO

@enduml