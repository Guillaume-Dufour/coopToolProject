@startuml

actor user
participant "LoginController" as loginCont
user -> loginCont : login()
activate loginCont
create UserFacade
loginCont -> UserFacade  : new
UserFacade -> AbstractDAOFactory : getFactory(type : FactoryType)
create SQLDAOFactory
AbstractDAOFactory --> SQLDAOFactory : new
SQLDAOFactory -> SQLDAOFactory : getUserDAO()
create SQLUserDAO
SQLDAOFactory --> SQLUserDAO : new
SQLUserDAO --> SQLDAOFactory : UserDAO
SQLDAOFactory --> UserFacade : UserDAO

UserFacade --> loginCont : UserFacade
loginCont -> loginCont : getText()
loginCont -> UserFacade : login(mail : String, password : String)
activate UserFacade
UserFacade -> SQLUserDAO : findUserByMail(mail : String)
activate SQLUserDAO
alt FoundUser
SQLUserDAO -> UserFacade : User
UserFacade -> User : checkPassword(password : String)
activate User
alt GoodPassword
User -> UserFacade : True
UserFacade -> loginCont : User
loginCont -> Session : getInstance()
Session -> Session : setUser(User)
else FalsePassword
User -> UserFacade : False
UserFacade -> Exception : fait ses bails
end
deactivate User
else !FoundUser
SQLUserDAO -> UserFacade : Null
UserFacade -> Exception : fait ses bails
end

'a finir : mettre la base de donn√©es et sql connection

@enduml