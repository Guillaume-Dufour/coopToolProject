@startuml
actor user
participant SearchStudentController
participant UserFacade
participant AbstractDAOFactory
participant MySQLDAOFactory
participant MySQLUserDAO
participant User
collections ListUser
database CoopToolDatabase

user -> SearchStudentController : select department in list
user -> SearchStudentController : search()
activate SearchStudentController
create UserFacade
SearchStudentController -> UserFacade  : getInstance()
UserFacade -> AbstractDAOFactory : getFactory(type : FactoryType)
activate UserFacade
create MySQLDAOFactory
AbstractDAOFactory -> MySQLDAOFactory : new
activate AbstractDAOFactory
MySQLDAOFactory -> MySQLDAOFactory : getUserDAO()
deactivate AbstractDAOFactory
create MySQLUserDAO
activate MySQLDAOFactory
MySQLDAOFactory -> MySQLUserDAO : new
MySQLUserDAO --> MySQLDAOFactory : UserDAO
MySQLDAOFactory --> UserFacade : UserDAO
deactivate MySQLDAOFactory
UserFacade --> SearchStudentController : UserFacade
SearchStudentController -> SearchStudentController : getDepartment()

SearchStudentController -> UserFacade : search(department : Department)
UserFacade -> MySQLUserDAO : findStudentByDepartment(department : Department)
activate MySQLUserDAO
MySQLUserDAO -> CoopToolDatabase : executeQuery(query : String)
CoopToolDatabase --> MySQLUserDAO : result
create ListUser
MySQLUserDAO -> ListUser : new ArrayList<User>()
create User
group while result != null
    MySQLUserDAO -> User : new
    User -> ListUser : add()
end
ListUser --> MySQLUserDAO : ListUser
MySQLUserDAO --> UserFacade : ListUser
UserFacade --> SearchStudentController : ListUser
group while ListUser.hasNext()
    SearchStudentController -> SearchStudentController : listStudent.addText(ListUser.next())
end
deactivate SearchStudentController
deactivate UserFacade
deactivate MySQLUserDAO

@enduml