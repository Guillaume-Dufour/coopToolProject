@startuml
actor user
participant SearchStudentController
participant UserFacade
participant AbstractDAOFactory
participant MySQLDAOFactory
participant MySQLUserDAO
participant User
database CoopToolDatabase

user -> SearchStudentController : search()
activate SearchStudentController
create UserFacade
SearchStudentController -> UserFacade  : getInstance()
UserFacade -> AbstractDAOFactory : getFactory(type : FactoryType)
activate UserFacade
create MySQLDAOFactory
AbstractDAOFactory -> MySQLDAOFactory : new
activate AbstractDAOFactory
MySQLDAOFactory -> MySQLDAOFactory : getUserDAO()
deactivate AbstractDAOFactory
create MySQLUserDAO
activate MySQLDAOFactory
MySQLDAOFactory -> MySQLUserDAO : new
MySQLUserDAO --> MySQLDAOFactory : UserDAO
MySQLDAOFactory --> UserFacade : UserDAO
deactivate MySQLDAOFactory
UserFacade --> SearchStudentController : UserFacade
SearchStudentController -> SearchStudentController : getText()

SearchStudentController -> UserFacade : search(speciality : String, year : int)
UserFacade -> MySQLUserDAO : findStudentByDepartment(abbreviation : String)
activate MySQLUserDAO
MySQLUserDAO -> CoopToolDatabase : executeQuery(query : String)
CoopToolDatabase --> MySQLUserDAO : result

create User
group while result.contains(user)
    MySQLUserDAO -> User : new
    User --> MySQLUserDAO : user
    MySQLUserDAO -> MySQLUserDAO : List.add(user)
end
    MySQLUserDAO --> UserFacade : List
    UserFacade --> SearchStudentController : List
    SearchStudentController -> SearchStudentController : listStudent.addText(List)

deactivate SearchStudentController
deactivate UserFacade
deactivate MySQLUserDAO

@enduml