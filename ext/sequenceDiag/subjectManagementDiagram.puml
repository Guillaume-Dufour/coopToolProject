@startuml
actor user
participant CreateSubjectController
participant SubjectFacade
participant AbstractDAOFactory
participant SubjectDAO
participant Subject
participant SubjectAlreadyExistException
database CoopToolDatabase

user -> CreateSubjectController : create()
activate CreateSubjectController
CreateSubjectController -> SubjectFacade  : getInstance()
SubjectFacade -> AbstractDAOFactory : getInstance()
activate SubjectFacade
activate AbstractDAOFactory
AbstractDAOFactory -> AbstractDAOFactory : getSubjectDAO()
AbstractDAOFactory -> SubjectDAO : getInstance()
SubjectDAO --> AbstractDAOFactory : SubjectDAO
AbstractDAOFactory --> SubjectFacade : SubjectDAO
deactivate AbstractDAOFactory
SubjectFacade --> CreateSubjectController : SubjectFacade
CreateSubjectController -> CreateSubjectController : getText()

CreateSubjectController -> SubjectFacade : create(speciality : String, year : int, abbreviation : String)
SubjectFacade -> SubjectDAO : findSubjectByAbbreviation(abbreviation : String)
activate SubjectDAO
SubjectDAO -> CoopToolDatabase : askForData
CoopToolDatabase --> SubjectDAO : result
create Subject
SubjectDAO -> Subject: new

alt !SubjectFound
    Subject --> SubjectDAO : null
    SubjectDAO --> SubjectFacade : null
    SubjectFacade -> Subject : new
    Subject --> SubjectFacade : Subject
    SubjectFacade -> SubjectDAO : create(t : Subject)
    SubjectDAO -> CoopToolDatabase : saveData
else SubjectFound
    Subject --> SubjectDAO : Subject
    SubjectDAO --> SubjectFacade : Subject
    create SubjectAlreadyExistException
    SubjectFacade --> SubjectAlreadyExistException : throws new SubjectAlreadyExistException()
end

deactivate CreateSubjectController
deactivate SubjectFacade
deactivate SubjectDAO

@enduml